v3.0.0
----------
- Fully rewritten to be cleaner, clearer, easier to use, etc.
- Vastly improved support for translating schema deployment and updating queries.
- Improved handling of connection strings, especially for SQLite when using PRAGMAs.
- Cleaned up how database configuration data is stored and used.

v2.3.1
----------
- Clean up and organize debug logging output.

v2.3.0
----------
- Remove functionality for skipping INSERT INTO statements when deploying db. 
    - This only worked for DeployQueries, not for DeployFuncs, and this led to confusion.

v2.2.0
----------
- Add support for translating CREATE TABLE queries when updating a database.

v2.1.0
----------
- Support for UpdateFuncs. 
    - Similar to DeployFuncs but for updating the schema.
    - Allows for more advanced schema updates that simple UpdateQueries wouldn't allow for.
- Improved and expaneded tests.
- Improved handling of SQLite PRAGMAs.
    - Append PRAGMAs to connection string (path to SQLite file) based on SQLite library used.
    - This allows for reliably setting busy_timeout, journal_mode, etc.
    - Works for mattn and modernc libraries even though each has a different PRAGMA format.

v1.4.0
----------
- Allow setting any SQLite PRAGMAs after connecting to db.
- Set MaxOpenConnections to 1 for SQLite dbs to alleviate SQLITE_BUSY errors (related to modernc library only really).

v1.3.0
----------
- Clean up logging.
    - Previously logging was done with `if c.Debug{}` blocks encapsulating a `.log.Println()` call.
    - Now, c.debugPrintln can be used.
    - This removes a lot of `if` blocks to make code cleaner.
- Allow keeping a database connection open after deploying or updating schema.
    - This was necessary for supporting SQLite when using an in-memory database.  
    - When an deploying a db the connection was closed after deploy was completed.
    - However, for an in-memory db this doesn't work since each connection gets a "new" db. 
    - When the connection was reopened to run queries none of the deployed schema existed.
    - To alleviate this, deploying (or updating) a db now can take an options struct that allows for keeping the connection open after deploy/update.
    - This allows connection to be reused and in-memory db to function as expected.

v1.2.0
----------
- Allow choosing between mattn and modernc libraries for SQLite.
    - This helps with cross compiling since mattn required CGO while modernc does not.
    - Use build tags to choose which library to use at compile time.
    - mattn is default, for now, if build tag is omitted.

v1.1.1
----------
- Fix bug and improve checking if a connection has been closed.
    - Previously, just relied on checking if connection is nil which doesn't work if connection is closed. This only worked if connection was never established.
    - Alleviates issues with running UpdateSchema() right after DeploySchema().
- Renamed translation funcs to specify what database format they translate from and to.
- Remove unneeded logging.
